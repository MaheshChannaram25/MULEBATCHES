# JDBC connection for TSA DB. 
jdbc.d.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver

#UAT
jdbc.d.select.url=jdbc:sqlserver://172.31.24.93:54452;databaseName=TSA_APS;instance=sql2014
jdbc.d.select.username=mtc_user
jdbc.d.select.password=Pune201%

#QA2
#jdbc.d.select.url=jdbc:sqlserver://172.31.102.179:54452;databaseName=TSA_APS;instance=sql2014
#jdbc.d.select.username=mtc2_user
#jdbc.d.select.password=Pune201%



####################Target UAT EC2  ######################
#jdbc.d.insert.url=jdbc:sqlserver://172.31.24.93:54452;databaseName=BI_REPORTS_UAT;instance=sql2014
#jdbc.d.insert.username=apsadmin
#jdbc.d.insert.password=AWSAdmin

####################Target UAT RDS  ######################
jdbc.d.insert.url=jdbc:sqlserver://uat-bi-db-etl.c6r6d9t1lkce.ap-southeast-1.rds.amazonaws.com:1433;databaseName=BI_REPORTS_UAT;instance=sql2014
jdbc.d.insert.username=bi_etl
jdbc.d.insert.password=2Q3WLkrq


#jdbc.d.select.UAT.url=jdbc:sqlserver://10.65.1.8:1433;databaseName=tp2;
#jdbc.d.select.UAT.username=tp2
#jdbc.d.select.UAT.password=SabaPassw0rd

#jdbc.d.select.MTC2.url=jdbc:mysql://uat-mtc2-db.c6r6d9t1lkce.ap-southeast-1.rds.amazonaws.com:3306/mtc
#jdbc.d.select.MTC2.username=mtcdbadmin
#jdbc.d.select.MTC2.password=mRTGJ8kC

#PROD
#jdbc.d.select.url=jdbc:sqlserver://MTC-DB;databaseName=TSA_APS;instance=sql2014
#jdbc.d.select.username=mtc_user_readonly
#jdbc.d.select.password=Poiu)987

#jdbc.d.insert.url=jdbc:sqlserver://prd-bi-db.c6r6d9t1lkce.ap-southeast-1.rds.amazonaws.com:1433;databaseName=BI_REPORTS_PROD;instance=sql2014
#jdbc.d.insert.username=bi_etl
#jdbc.d.insert.password=2Q3WLkrq

#jdbc.d.select.UAT.url=jdbc:sqlserver://saba.tsaasia.local;databaseName=tp2;
#jdbc.d.select.UAT.username=tp2
#jdbc.d.select.UAT.password=SabaPassw0rd

#jdbc.d.select.MTC2.url=jdbc:mysql://mtc-db.c6r6d9t1lkce.ap-southeast-1.rds.amazonaws.com:3306/mtc
#jdbc.d.select.MTC2.username=read_only
#jdbc.d.select.MTC2.password=ReadOnly123


# Scheduled Cron jobs to pull date from source.
# to generate Cron string visit http://www.cronmaker.com/
# 2AM job = 0 0 2 1/1 * ? *
# every hour job = 0 0 0/1 1/1 * ? *
# every 5 Min job = 0 0/05 * 1/1 * ? *

quartz.tsa=0 17 17 * * ?

tsa.query.count=3

tsa.query.offset=0
tsa.query.limit=55000

tsa.file.location=D:\\BI\\TSA_file\\BATCH3
tsa.file.copy.location=D:\\BI\\TSA_file\\COPY_FILE
tsa.file.email.location=D:\\BI\\TSA_file\\EMAIL_CONTENT
tsa.file.salesRevenue.location=D:\\BI\\TSA_file\\SalesRevenue

#Notification email properties
tsa.email.to=dilip.kaushalye@tsa-solutions.com,vikas.yadav@tsa-solutions.com,monalisa.dusane@tsa-solutions.com,chamila.w@tsa-solutions.com
tsa.email.from=mtc.notifications@tsa-solutions.com
tsa.email.host=smtp.office365.com
tsa.email.port=587
tsa.email.username=mtc.notifications@tsa-solutions.com
tsa.email.password=Waxo0533
tsa.email.subject=[UAT]BI-ETL Job Failure - Batch3 failed
#tsa.email.subject=BI-ETL Job Failure - Batch3 failed

#DB Queries
tsa.select.1=SELECT DISTINCT ISNULL(A.OpportunityID,'NA') AS OpportunityID, ISNULL(A.HotelId,0) AS Hotelid, ISNULL(B.Hotelname,A.HotelName) AS HotelName, UserName AS Trainer, CASE WHEN Year(A.StartDate) >= 2018 AND A.type='Training - FDU' THEN 'Onsite - Training' WHEN Year(A.StartDate) >= 2018 AND A.type='Consulting - FDU' THEN 'Onsite - Consulting' WHEN Year(A.StartDate) >= 2018 AND A.type='Travel' THEN 'Travel - Transportation' WHEN Year(A.StartDate) >= 2018 AND A.type='Trainer-in-Training' THEN 'Onsite - Trainer-in-Training' ELSE A.Type END AS TYPE, A.StartDate, A.EndDate, Duration AS DurationMins, ROUND(dbo.F_tsa_getdurationindays_bi(duration), 1)  AS durationdays, ROUND(dbo.F_tsa_getdurationinhours_bi(duration), 1) AS durationhours, CASE WHEN A.Type IN ('Non Payable - Call', 'Non Payable - Meeting', 'Training - FDU - Comp', 'Non Payable - Layover Day', 'Non Payable - Program Development', 'Non Payable - Talent Development') THEN 1 ELSE 0 END AS CompDaysFlag, CASE WHEN A.Type = D.Type THEN 0 WHEN A.Regarding LIKE '%Non-Billable%' THEN 0 WHEN A.Priority NOT IN (0, 3) THEN 0 ELSE 1 END AS BillableAttribution, CASE WHEN A.Priority IN (0, 3) AND A.Type IN ('Remote - Trainer-in-Training') THEN 0 WHEN A.Priority IN (0, 3) AND A.Type IN ('Training - Res Coaching', 'Training - Sales Coaching','Remote - Consulting','Remote - Monitoring','Remote - Training','PPM','PPM - Call','Training - Res Sales - CXL by Hotel') THEN 1 WHEN A.Priority IN (0, 3) AND (Regarding LIKE '%Remote%' OR Regarding LIKE '%Monitoring%' OR Regarding LIKE '%Consulting%' OR Regarding LIKE '%PSI Call%') THEN 1 ELSE 0 END AS RemoteAttribution, CASE WHEN A.Priority IN (0, 3) AND A.Type IN ('Training - Res Sales', 'Training - FDU', 'Training - FDU - Comp', 'Training - Sales', 'Training - Res Coaching', 'Training - Sales Coaching') THEN 1 WHEN A.Priority IN (0, 3) AND A.Type IN ('Onsite - Training', 'Onsite - Consulting', 'Consulting - FDU', 'Implementation') AND Regarding LIKE '%Billable%' THEN 1 WHEN A.Priority IN (0, 3) AND A.Type IN ('Consulting - FDU - Comp', 'Training - Res Coaching', 'Training - Sales Coaching') THEN 1 ELSE 0 END AS OnsiteAttribution, CASE WHEN A.Priority = 0 THEN 'Confirmed' WHEN A.Priority = 1 THEN 'Proposed' WHEN A.Priority = 2 THEN 'Planned' WHEN A.Priority = 3 THEN 'Cancelled by Hotel' WHEN A.Priority = 4 THEN 'Cancelled by TSA' END AS 'AppointmentStatus',A.Location, A.Regarding, A.Notes, A.OrgStartDate AS OrgininalStartDate, A.OrgEndDate AS OriginalEndDate,A.CreatedBy AS CreatedBy,A.CreatedDate AS CreatedDate,A.ModifiedBy AS ModifiedBy,A.ModifiedDate AS ModifiedDate,A.WaiveFees AS WaiveLogisticsFee FROM T_FIN_Appointments A LEFT JOIN T_Mas_CalendarActivityType D ON A.Type=D.Type LEFT JOIN T_MAS_HOTEL B ON A.HotelName=B.HotelName AND b.RptEndDate >= A.StartDate LEFT JOIN T_Trn_HotelContractDetails C ON a.HotelName=c.Company AND A.StartDate >= C.ContractStartDate AND A.StartDate <= C.ContractEndDate AND C.ProductNameID NOT IN (0,35,36) AND ((Replace(C.[Product Name],' ','') LIKE '%' + (SELECT Replace(REPLACE(sid, 'Professional Services', 'Add-Ons Only'),' ','') FROM dbo.F_Split(regarding, ':', 2)) + '%') OR  (YEAR(startdate) < '2018' OR (SELECT sid FROM dbo.F_Split(regarding, ':', 2)) = 'LEGACY') AND  C.[Product Name] LIKE '%Front Desk Upselling%' OR (YEAR(startdate) < '2018' OR (SELECT sid FROM dbo.F_Split(regarding, ':', 2)) = 'LEGACY') AND C.[Product Name] LIKE '%FDUMAX%') Order by OpportunityID,Hotelid ASC OFFSET $&& ROWS FETCH NEXT $** ROWS ONLY
tsa.select.table.1=T_MAS_HOTEL
tsa.insert.1=INSERT INTO dbo.T_FACT_APPOINTMENTS (OpportunityID,Hotelid,HotelName,Trainer,Type,StartDate,EndDate,DurationMins,DurationDays,DurationHours,CompDaysFlag,BillableAttribution,RemoteAttribution,OnsiteAttribution,AppointmentStatus,ModifiedBy,Location,Regarding,Notes,OrgininalStartDate,OriginalEndDate,Runid,WaiveLogisticsFee,ModifiedDate,CreatedBy,CreatedDate)  \
			 VALUES (#[payload.OpportunityID],#[payload.Hotelid],#[payload.HotelName],#[payload.Trainer],#[payload.Type],#[payload.StartDate],#[payload.EndDate],#[payload.DurationMins],#[payload.DurationDays],#[payload.DurationHours],#[payload.CompDaysFlag],#[payload.BillableAttribution],#[payload.RemoteAttribution],#[payload.OnsiteAttribution],#[payload.AppointmentStatus],#[payload.ModifiedBy],#[payload.Location],#[payload.Regarding],#[payload.Notes],#[payload.OrgininalStartDate],#[payload.OriginalEndDate],#[flowVars.tableRunID],#[payload.WaiveLogisticsFee],#[payload.ModifiedDate],#[payload.CreatedBy],#[payload.CreatedDate])
tsa.insert.table.1=T_FACT_APPOINTMENTS
tsa.insert.dbtype.1=bi-report
tsa.insert.operationtype.1=truncate
tsa.db.flag.1=MS


#tsa.select.2=Select DATEID,HOTELID,CONFIRMATIONNO,CHECKINDATE,CHECKINTIME,CHECKOUTDATE,STAFFID,CITIME,CIDATE,ROOM,RESVSTATUS,ROOMTYPE,BOOKEDROOMCATGLABEL,MARKETCODE,MARKETCODEDESC,MARKETSEGID,MARKETSEGMENTTYPE,PRODUCTS,RATECODE,RATEDESC,RATEVALUE,CONFIGUREDPRICE,UPGRADEREASON,UPGRADEBY,UPGRADEWHY,DISCOUNTAMT,DISCOUNTPRCNT,DISCOUNTREASONCODE,SOURCECODE,SOURCEDESC,MEMBERSHIPTYPE,MEMBERSHIPLEVEL,NATIONALITY,GUESTCOUNTRY,ADULTS,CHILDREN,SPECIALREQUESTS,TRANSACTIONDATETIME From (SELECT DISTINCT Cast(Cast(Year(A.EXTRACTDATE) AS NVARCHAR) + ''  + Cast(Format(A.EXTRACTDATE, 'MM')AS NVARCHAR)  + ''  + Cast(Format(A.EXTRACTDATE, 'dd') AS NVARCHAR) AS INT) AS  DateID,A.HOTELID,A.CONFIRMATIONNO,A.ChkInDate as CHECKINDATE,CASE WHEN  A.CITIME = 'x' then Convert(VARCHAR(8),CONVERT(Time, A.Appuser, 14))  Else Convert(VARCHAR(8),CONVERT(Time, A.CITIME, 14)) End as CHECKINTIME ,A.ChkOutDate as CHECKOUTDATE,A.APPUSER as STAFFID,A.CITIME,A.CIDATE,ISNULL(A.ROOM,0) as ROOM,A.RESVSTATUS,ISNULL(A.ROOMTYPE,'NA') as ROOMTYPE,A.BOOKEDROOMCATGLABEL,A.MARKETCODE, A.MARKETDESC as MARKETCODEDESC,Cast(A.HOTELID AS NVARCHAR) + '_' + Isnull(A.MARKETCODE, 'MISC') + '_' + Replace(Isnull(A.MARKETSEGMENTTYPE, '0'), '0', '2') AS MarketSegID,CASE WHEN  ISNULL(A.MARKETSEGMENTTYPE,0) <> 1 then 2 ELSE 1 END as MARKETSEGMENTTYPE,  A.PRODUCTS,A.RATECODE,A.RATEDESC,A.RATEVALUE,MAx(A.CFGPRICE) as CONFIGUREDPRICE,A.UPGRADEREASON,A.UPGRADEBY,A.UPGRADEWHY,A.DISCOUNTAMT,A.DISCOUNTPRCNT,A.DISCOUNTREASONCODE, A.SOURCECODE,A.SOURCEDESC,A.MEMBERSHIPTYPE,A.MEMBERSHIPLEVEL,CASE WHEN A.NATIONALITY='' THEN A.GUESTCOUNTRY ELSE A.NATIONALITY END AS NATIONALITY,CASE WHEN A.GUESTCOUNTRY='' THEN A.NATIONALITY ELSE A.GUESTCOUNTRY END AS GUESTCOUNTRY,A.ADULTS,A.CHILDREN,A.SPECIALREQUESTS,MAX(A.TRANSACTIONDATETIME) as TRANSACTIONDATETIME from TSA_APS..T_FIN_OPERA5TSA06 A INNER JOIN TSA_APS..T_Trn_HotelValSysSchema B on A.hotelid=B.hotelid and APSFILECODE='TSA06'  Inner Join TSA_APS..T_FIN_OPERA5TSA06 C on A.hotelid=C.hotelid and A.ExtractDate=C.extractdate and A.ConfirmationNo=C.ConfirmationNo Where A.ExtractDate = convert(varchar(11),dateadd(Day,-2,'20190610'),121) Group by Cast(Cast(Year(A.EXTRACTDATE) AS NVARCHAR) + ''  + Cast(Format(A.EXTRACTDATE, 'MM')AS NVARCHAR)  + ''  + Cast(Format(A.EXTRACTDATE, 'dd') AS NVARCHAR) AS INT),A.HOTELID,A.CONFIRMATIONNO,A.ChkInDate,A.ChkOutDate ,A.APPUSER,A.CITIME,A.CIDATE,A.ROOMTYPE,A.ResvStatus,A.BOOKEDROOMCATGLABEL,A.MARKETCODE, A.MARKETDESC ,Cast(A.HOTELID AS NVARCHAR) + '_' + Isnull(A.MARKETCODE, 'MISC') + '_' + Replace(Isnull(A.MARKETSEGMENTTYPE, '0'), '0', '2') ,A.MARKETSEGMENTTYPE, A.PRODUCTS,A.RATECODE,A.RATEDESC,A.RATEVALUE,A.UPGRADEREASON,A.UPGRADEBY,A.Nationality,A.GuestCountry,A.UPGRADEWHY,A.DISCOUNTAMT,A.DISCOUNTPRCNT,A.DISCOUNTREASONCODE, A.SOURCECODE,A.SOURCEDESC,A.MEMBERSHIPTYPE,A.MEMBERSHIPLEVEL,A.ADULTS,A.CHILDREN,A.SPECIALREQUESTS,A.id,A.ROOM having A.id =Max(C.iD)) as rownumber Order by HotelID,dateid,confirmationno ASC OFFSET $&& ROWS FETCH NEXT $** ROWS ONLY
tsa.select.2=Select DATEID,HOTELID,CONFIRMATIONNO,CHECKINDATE,CHECKINTIME,CHECKOUTDATE,STAFFID,CITIME,CIDATE,ROOM,RESVSTATUS,ROOMTYPE,BOOKEDROOMCATGLABEL,MARKETCODE,MARKETCODEDESC,MARKETSEGID,MARKETSEGMENTTYPE,PRODUCTS,RATECODE,RATEDESC,RATEVALUE,CONFIGUREDPRICE,UPGRADEREASON,UPGRADEBY,UPGRADEWHY,DISCOUNTAMT,DISCOUNTPRCNT,DISCOUNTREASONCODE,SOURCECODE,SOURCEDESC,MEMBERSHIPTYPE,MEMBERSHIPLEVEL,NATIONALITY,GUESTCOUNTRY,ADULTS,CHILDREN,SPECIALREQUESTS,TRANSACTIONDATETIME From (SELECT DISTINCT Cast(Cast(Year(A.EXTRACTDATE) AS NVARCHAR) + ''  + Cast(Format(A.EXTRACTDATE, 'MM')AS NVARCHAR)  + ''  + Cast(Format(A.EXTRACTDATE, 'dd') AS NVARCHAR) AS INT) AS  DateID,A.HOTELID,A.CONFIRMATIONNO,A.ChkInDate as CHECKINDATE,CASE WHEN  A.CITIME = 'x' then Convert(VARCHAR(8),CONVERT(Time, A.Appuser, 14))  Else Convert(VARCHAR(8),CONVERT(Time, A.CITIME, 14)) End as CHECKINTIME ,A.ChkOutDate as CHECKOUTDATE,A.APPUSER as STAFFID,A.CITIME,A.CIDATE,ISNULL(A.ROOM,0) as ROOM,A.RESVSTATUS,ISNULL(A.ROOMTYPE,'NA') as ROOMTYPE,A.BOOKEDROOMCATGLABEL,A.MARKETCODE, A.MARKETDESC as MARKETCODEDESC,Cast(A.HOTELID AS NVARCHAR) + '_' + Isnull(A.MARKETCODE, 'MISC') + '_' + Replace(Isnull(A.MARKETSEGMENTTYPE, '0'), '0', '2') AS MarketSegID,CASE WHEN  ISNULL(A.MARKETSEGMENTTYPE,0) <> 1 then 2 ELSE 1 END as MARKETSEGMENTTYPE,  A.PRODUCTS,A.RATECODE,A.RATEDESC,A.RATEVALUE,MAx(A.CFGPRICE) as CONFIGUREDPRICE,A.UPGRADEREASON,A.UPGRADEBY,A.UPGRADEWHY,A.DISCOUNTAMT,A.DISCOUNTPRCNT,A.DISCOUNTREASONCODE, A.SOURCECODE,A.SOURCEDESC,A.MEMBERSHIPTYPE,A.MEMBERSHIPLEVEL,CASE WHEN A.NATIONALITY='' THEN A.GUESTCOUNTRY ELSE A.NATIONALITY END AS NATIONALITY,CASE WHEN A.GUESTCOUNTRY='' THEN A.NATIONALITY ELSE A.GUESTCOUNTRY END AS GUESTCOUNTRY,A.ADULTS,A.CHILDREN,A.SPECIALREQUESTS,MAX(A.TRANSACTIONDATETIME) as TRANSACTIONDATETIME from TSA_APS..T_FIN_OPERA5TSA06 A INNER JOIN TSA_APS..T_Trn_HotelValSysSchema B on A.hotelid=B.hotelid and APSFILECODE='TSA06'  Inner Join TSA_APS..T_FIN_OPERA5TSA06 C on A.hotelid=C.hotelid and A.ExtractDate=C.extractdate and A.ConfirmationNo=C.ConfirmationNo Where A.ExtractDate = convert(varchar(11),dateadd(Day,-2,getdate()),121) Group by Cast(Cast(Year(A.EXTRACTDATE) AS NVARCHAR) + ''  + Cast(Format(A.EXTRACTDATE, 'MM')AS NVARCHAR)  + ''  + Cast(Format(A.EXTRACTDATE, 'dd') AS NVARCHAR) AS INT),A.HOTELID,A.CONFIRMATIONNO,A.ChkInDate,A.ChkOutDate ,A.APPUSER,A.CITIME,A.CIDATE,A.ROOMTYPE,A.ResvStatus,A.BOOKEDROOMCATGLABEL,A.MARKETCODE, A.MARKETDESC ,Cast(A.HOTELID AS NVARCHAR) + '_' + Isnull(A.MARKETCODE, 'MISC') + '_' + Replace(Isnull(A.MARKETSEGMENTTYPE, '0'), '0', '2') ,A.MARKETSEGMENTTYPE, A.PRODUCTS,A.RATECODE,A.RATEDESC,A.RATEVALUE,A.UPGRADEREASON,A.UPGRADEBY,A.Nationality,A.GuestCountry,A.UPGRADEWHY,A.DISCOUNTAMT,A.DISCOUNTPRCNT,A.DISCOUNTREASONCODE, A.SOURCECODE,A.SOURCEDESC,A.MEMBERSHIPTYPE,A.MEMBERSHIPLEVEL,A.ADULTS,A.CHILDREN,A.SPECIALREQUESTS,A.id,A.ROOM having A.id =Max(C.iD)) as rownumber Order by HotelID,dateid,confirmationno ASC OFFSET $&& ROWS FETCH NEXT $** ROWS ONLY
tsa.select.table.2=T_MAS_HOTEL
tsa.insert.2=INSERT INTO dbo.T_FACT_HOTEL_ARRIVALS(DATEID,HOTELID,CONFIRMATIONNO,CHECKINDATE,CHECKINTIME,CHECKOUTDATE,STAFFID,CITIME,CIDATE,ROOM,RESVSTATUS,ROOMTYPE,BOOKEDROOMCATGLABEL,MARKETCODE,MARKETCODEDESC,MARKETSEGID,MARKETSEGMENTTYPE,PRODUCTS,RATECODE,RATEDESC,RATEVALUE,CONFIGUREDPRICE,UPGRADEREASON,UPGRADEBY,UPGRADEWHY,DISCOUNTAMT,DISCOUNTPRCNT,DISCOUNTREASONCODE,SOURCECODE,SOURCEDESC,MEMBERSHIPTYPE,MEMBERSHIPLEVEL,NATIONALITY,GUESTCOUNTRY,ADULTS,CHILDREN,SPECIALREQUESTS,TRANSACTIONDATETIME,RUNID) \
			 VALUES (#[payload.DATEID],#[payload.HOTELID],#[payload.CONFIRMATIONNO],#[payload.CHECKINDATE],#[payload.CHECKINTIME],#[payload.CHECKOUTDATE],#[payload.STAFFID],#[payload.CITIME],#[payload.CIDATE],#[payload.ROOM],#[payload.RESVSTATUS],#[payload.ROOMTYPE],#[payload.BOOKEDROOMCATGLABEL],#[payload.MARKETCODE],#[payload.MARKETCODEDESC],#[payload.MARKETSEGID],#[payload.MARKETSEGMENTTYPE],#[payload.PRODUCTS],#[payload.RATECODE],#[payload.RATEDESC],#[payload.RATEVALUE],#[payload.CONFIGUREDPRICE],#[payload.UPGRADEREASON],#[payload.UPGRADEBY],#[payload.UPGRADEWHY],#[payload.DISCOUNTAMT],#[payload.DISCOUNTPRCNT],#[payload.DISCOUNTREASONCODE],#[payload.SOURCECODE],#[payload.SOURCEDESC],#[payload.MEMBERSHIPTYPE],#[payload.MEMBERSHIPLEVEL],#[payload.NATIONALITY],#[payload.GUESTCOUNTRY],#[payload.ADULTS],#[payload.CHILDREN],#[payload.SPECIALREQUESTS],#[payload.TRANSACTIONDATETIME],#[flowVars.tableRunID])
#tsa.insert.2=INSERT INTO dbo.T_FACT_HOTEL_ARRIVALS(DATEID,HOTELID,CONFIRMATIONNO,CHECKINDATE,CHECKINTIME,CHECKOUTDATE,STAFFID,ROOM,RESVSTATUS,ROOMTYPE,BOOKEDROOMCATGLABEL,MARKETCODE,MARKETCODEDESC,MARKETSEGID,MARKETSEGMENTTYPE,PRODUCTS,RATECODE,RATEDESC,RATEVALUE,CONFIGUREDPRICE,UPGRADEREASON,UPGRADEBY,UPGRADEWHY,DISCOUNTAMT,DISCOUNTPRCNT,DISCOUNTREASONCODE,SOURCECODE,SOURCEDESC,MEMBERSHIPTYPE,MEMBERSHIPLEVEL,NATIONALITY,GUESTCOUNTRY,ADULTS,CHILDREN,SPECIALREQUESTS,TRANSACTIONDATETIME,RUNID) \
#			 VALUES (#[payload.DATEID],#[payload.HOTELID],#[payload.CONFIRMATIONNO],#[payload.CHECKINDATE],#[payload.CHECKINTIME],#[payload.CHECKOUTDATE],#[payload.STAFFID],#[payload.ROOM],#[payload.RESVSTATUS],#[payload.ROOMTYPE],#[payload.BOOKEDROOMCATGLABEL],#[payload.MARKETCODE],#[payload.MARKETCODEDESC],#[payload.MARKETSEGID],#[payload.MARKETSEGMENTTYPE],#[payload.PRODUCTS],#[payload.RATECODE],#[payload.RATEDESC],#[payload.RATEVALUE],#[payload.CONFIGUREDPRICE],#[payload.UPGRADEREASON],#[payload.UPGRADEBY],#[payload.UPGRADEWHY],#[payload.DISCOUNTAMT],#[payload.DISCOUNTPRCNT],#[payload.DISCOUNTREASONCODE],#[payload.SOURCECODE],#[payload.SOURCEDESC],#[payload.MEMBERSHIPTYPE],#[payload.MEMBERSHIPLEVEL],#[payload.NATIONALITY],#[payload.GUESTCOUNTRY],#[payload.ADULTS],#[payload.CHILDREN],#[payload.SPECIALREQUESTS],#[payload.TRANSACTIONDATETIME],#[flowVars.tableRunID])
tsa.insert.table.2=T_FACT_HOTEL_ARRIVALS
tsa.insert.dbtype.2=bi-report
tsa.insert.operationtype.2=truncate
tsa.db.flag.2=MS


tsa.select.3=Select HOTELID,DATEID,ROOMCLASSID,ROOMCLASSDESC,ROOMTYPEID,ROOMTYPEDEC,ROOMNAME,ROOMGROUP,ROOMCATEGORYLEVEL,PHYSICALROOMS,OCCUPIEDROOMS,AVAILABLEROOMS,OOOROOMS,OOSROOMS,ARRIVALROOMS,COMPUSEROOMS,HOUSEUSEROOMS,DAYUSEROOMS,DEFINITEARRIVALS,WALKINROOMS,NOSHOWROOMS,EARLYDEPARTUREROOMS,EXTSTAYROOMS,NUMBEROFGUESTSINHOUSE,TOTALROOMREVENUE,TOTALFBREVENUE,TOTALOTHERREVENUE,TOTALPACKAGEREVENUE,TOTALPACKAGEROOMREVENUE,TOTALPACKAGEFBREVENUE,TOTALPACKAGEOTHERREVENUE,TOTALPACKAGENONREVENUE from(SELECT DISTINCT A.Hotelid, Cast(Cast(Year(A.EXTRACTDATE) AS NVARCHAR) + ''  + Cast(Format(A.EXTRACTDATE, 'MM')AS NVARCHAR)  + ''  + Cast(Format(A.EXTRACTDATE, 'dd') AS NVARCHAR) AS INT) AS  DateID, ISNULL(A.roomtype,'NA') as ROOMCLASSID,ISNULL(D.RoomName,'NA') as [ROOMCLASSDESC],ISNULL(A.RoomType,'NA') as ROOMTYPEID,ISNULL(D.RoomName,'NA') as [ROOMTYPEDEC],ISNULL(D.[ROOMNAME],'NA') as [ROOMNAME],ISNULL(D.ROOMGRP,'NA') as ROOMGROUP, ISNULL(D.RoomCategory,'NA') as [ROOMCATEGORYLEVEL], (A.availablerooms) as PhysicalRooms, A.roomssold AS OccupiedRooms, (A.AvailableRooms - A.RoomsSold) as availablerooms,  ISNULL(B.OORoom,0) as OOORooms,0 as OOSRooms,ISNULL(B.TotalArrival,0) as ArrivalRooms, 0 as CompUseRooms,0 as HouseUseRooms,0 as Dayuserooms, 0 as DefiniteArrivals, 0 as WalkinRooms,0 as noshowrooms,0 as EarlyDepartureRooms,0 as ExtstayRooms,0 as Numberofguestsinhouse,CONVERT(NUMERIC(18, 2), A.roomrev)   AS TotalRoomRevenue, 0 as TotalFBRevenue,CONVERT(NUMERIC(18, 2), A.otherrev)  AS TotalOtherRevenue,0 as TotalPackageRevenue, 0 as TotalPackageRoomRevenue,0 as TotalPackageFBRevenue,0 as TotalPackageOtherRevenue,0 as TotalPackageNonRevenue,0 as RunID FROM   t_fin_fideliotsa03 A Left Join t_fin_fideliotsa07 B on B.hotelcode = A.hotelcode AND B.extractdate = A.extractdate  AND B.roomtype = A.roomtype AND B.ExtractDate=B.GFORBDate Left Join [T_TRN_BI_HOTELROOMCODE] D on A.Hotelid=D.hotelid and A.ROomType=D.Roomcode and A.Extractdate between D.effectivestartdate and D.effectiveenddate  where A.extractdate = convert(varchar(11),dateadd(Day,-2,getdate()),121) group by A.Hotelid, A.EXTRACTDATE,A.roomtype,A.id,A.availablerooms,A.roomrev,a.otherrev,A.RoomsSold,B.ooroom,B.TotalArrival,D.RoomName,D.ROOMGRP,D.ROOMCATEGORY  Union ALL SELECT DISTINCT A.Hotelid, Cast(Cast(Year(A.EXTRACTDATE) AS NVARCHAR) + ''  + Cast(Format(A.EXTRACTDATE, 'MM')AS NVARCHAR)  + ''  + Cast(Format(A.EXTRACTDATE, 'dd') AS NVARCHAR) AS INT) AS  DateID,  A.RoomClass as ROOMCLASSID,A.RoomClassdesc as [ROOMCLASSDESC], A.RoomType as ROOMTYPEID,ISNULL(A.ROOMTYPEDESC,'NA') as [ROOMTYPEDEC],ISNULL(D.[ROOMNAME],A.ROOMTYPEDESC) as [ROOMNAME],ISNULL(D.ROOMGRP,'NA') as ROOMGROUP, ISNULL(D.RoomCategory,'NA') as [ROOMCATEGORYLEVEL], A.ExistingRoom as PhysicalRooms, A.NoOfDefiniteRoom AS OccupiedRooms, ( A.ExistingRoom - A.NoOfDefiniteRoom ) AS Availablerooms, A.ooroom as OOORooms,A.OSRoom as OOSRooms,0 as Totalarrival,  0 as CompUseRooms,0 as HouseUseRooms,A.DayUseRoom as Dayuserooms, 0 as DefiniteArrivals, 0 as WalkinRooms,A.noshowroom as noshowrooms,0 as EarlyDepartureRooms,0 as ExtstayRooms,A.noofguests as Numberofguestsinhouse,CONVERT(NUMERIC(18, 2), A.TotalRoomRevenue)  AS TotalRoomRevenue,  CONVERT(NUMERIC(18, 2), A.TotalFBRevenue)  as TotalFBRevenue,CONVERT(NUMERIC(18, 2), A.TotalOtherRevenue) AS TotalOtherRevenue,CONVERT(NUMERIC(18, 2), A.TotalPackageRevenue) as TotalPackageRevenue, CONVERT(NUMERIC(18, 2), A.TotalPackageRoomRevenue) as TotalPackageRoomRevenue,CONVERT(NUMERIC(18, 2), A.TotalPackageFBRevenue) as TotalPackageFBRevenue,CONVERT(NUMERIC(18, 2), A.TotalPackageOtherRevenue) as TotalPackageOtherRevenue,CONVERT(NUMERIC(18, 2), A.TotalPackageNonRevenue) as TotalPackageNonRevenue ,0 as RunID FROM   t_fin_opera5tsa03 A left Join T_TRN_BI_HOTELROOMCODE D on A.Hotelid=D.hotelid and A.ROOMTYPE=D.ROOMCODE and A.Extractdate between D.effectivestartdate and D.effectiveenddate  where A.extractdate = convert(varchar(11),dateadd(Day,-2,getdate()),121) group by A.Hotelid,A.EXTRACTDATE,A.RoomClass,A.RoomType,A.ExistingRoom,A.NoOfDefiniteRoom,A.NoOfDefiniteRoom,A.ooroom,A.OSRoom,A.DayUseRoom,A.noshowroom,A.noofguests,A.TotalRoomRevenue,A.TotalFBRevenue,A.TotalOtherRevenue,A.TotalPackageRevenue,A.TotalPackageRoomRevenue,A.TotalPackageFBRevenue,A.TotalPackageFBRevenue, A.TotalPackageOtherRevenue,A.TotalPackageNonRevenue, A.id,A.RoomClassDesc,A.RoomTypeDesc,D.RoomName,D.Roomgrp,D.Roomcategory Union ALL SELECT B.Hotelid, Cast(Cast(Year(A.EXTRACTDATE) AS NVARCHAR) + ''  + Cast(Format(A.EXTRACTDATE, 'MM')AS NVARCHAR)  + ''  + Cast(Format(A.EXTRACTDATE, 'dd') AS NVARCHAR) AS INT) AS  DateID,  A.RoomClass as ROOMCLASSID,ISNULL(A.RoomClass,'NA') as [ROOMCLASSDESC], A.RoomType as ROOMTYPEID,ISNULL(D.RoomName,'NA') as [ROOMTYPEDEC],ISNULL(D.[ROOMNAME],'NA'),ISNULL(D.ROOMGRP,'NA') as ROOMGROUP, ISNULL(D.RoomCategory,'NA') as [ROOMCATEGORYLEVEL], A.AvailableRoom as PhysicalRooms, A.occupiedroom AS OccupiedRooms, ( A.availableroom - A.occupiedroom )AS availablerooms, A.ooroom as OOORooms,A.OSRoom as OOSRooms,0 as Totalarrival,  0 as CompUseRooms,0 as HouseUseRooms,A.DayUseRoom as Dayuserooms, 0 as DefiniteArrivals, 0 as WalkinRooms,A.noshowroom as noshowrooms,0 as EarlyDepartureRooms,0 as ExtstayRooms,A.noofguest as Numberofguestsinhouse,CONVERT(NUMERIC(18, 2), ISNULL((A.totalroomrev),0))  AS TotalRoomRevenue,  CONVERT(NUMERIC(18, 2), ISNULL((A.TotalFBRev),0))  as TotalFBRevenue,CONVERT(NUMERIC(18, 2), ISNULL((A.totalotherrev),0)) AS TotalOtherRevenue,CONVERT(NUMERIC(18, 2), ISNULL((A.TotalPackageRev),0)) as TotalPackageRevenue, CONVERT(NUMERIC(18, 2), ISNULL((A.TotalPackageRoomRev),0)) as TotalPackageRoomRevenue,CONVERT(NUMERIC(18, 2), ISNULL((A.TotalPackageFBRev),0)) as TotalPackageFBRevenue,CONVERT(NUMERIC(18, 2), ISNULL((A.TotalPackageOtherRev),0)) as TotalPackageOtherRevenue,CONVERT(NUMERIC(18, 2), ISNULL((A.TotalPackageNonRev),0)) as TotalPackageNonRevenue ,0 as RunID FROM  t_fin_operatsa03 A  Inner Join T_MAS_HOTEL B on A.hotelid=B.hotelid left Join T_TRN_BI_HOTELROOMCODE D on A.Hotelid=D.hotelid and A.ROOMTYPE=D.ROOMCODE and A.Extractdate between D.effectivestartdate and D.effectiveenddate where A.extractdate = convert(varchar(11),dateadd(Day,-2,getdate()),121) group by B.Hotelid,A.EXTRACTDATE,A.RoomClass,A.RoomType,A.AvailableRoom,A.occupiedroom,A.ooroom,A.OSRoom,A.DayUseRoom,A.noshowroom,A.noofguest,A.totalroomrev,A.TotalFBRev,A.totalotherrev,A.TotalPackageRev,A.TotalPackageRoomRev,A.TotalPackageRoomRev,A.TotalPackageFBRev, A.TotalPackageOtherRev,A.TotalPackageNonRev, A.id,Roomname,RoomGrp,Roomcategory Union ALL SELECT A.Hotelid, Cast(Cast(Year(EXTRACTDATE) AS NVARCHAR) + ''  + Cast(Format(EXTRACTDATE, 'MM')AS NVARCHAR)  + ''  + Cast(Format(EXTRACTDATE, 'dd') AS NVARCHAR) AS INT) AS  DateID,  A.ROOMCLASSID as ROOMCLASSID, ISNULL(A.ROOMCLASSID,'NA') AS ROOMCLASSDESC,ROOMTYPEID as ROOMTYPEID,ISNULL(D.RoomName,'NA') as [ROOMTYPEDEC],ISNULL(D.[ROOMNAME],'NA'),ISNULL(D.ROOMGRP,'NA') as ROOMGROUP, ISNULL(D.RoomCategory,'NA') as [ROOMCATEGORYLEVEL], PhysicalRooms as PhysicalRooms, OccupiedRooms AS OccupiedRooms, (PhysicalRooms - OccupiedRooms) AS Availablerooms, OOORooms as OOORooms,OOSRooms as OOSRooms,ArrivalRooms as Totalarrival,  CompUseRooms as CompUseRooms,HouseUseRooms as HouseUseRooms,DayUseRooms as Dayuserooms, DefiniteArrivals as DefiniteArrivals, WalkinRooms as WalkinRooms,noshowrooms as noshowrooms,EarlyDepartureRooms as EarlyDepartureRooms,ExtstayRooms as ExtstayRooms,Numberofguestsinhouse as Numberofguestsinhouse,CONVERT(NUMERIC(18, 2), TotalRoomRev)  AS TotalRoomRevenue,  CONVERT(NUMERIC(18, 2), TotalFBRev)  as TotalFBRevenue,CONVERT(NUMERIC(18, 2), TotalOtherRev) AS TotalOtherRevenue,0 as TotalPackageRevenue, 0 as TotalPackageRoomRevenue,0 as TotalPackageFBRevenue,0 as TotalPackageOtherRevenue,0 as TotalPackageNonRevenue ,0 as RunID FROM   t_fin_fspms_room A left Join T_TRN_BI_HOTELROOMCODE D on A.Hotelid=D.hotelid and A.ROOMTYPEID=D.ROOMCODE  and A.Extractdate between D.effectivestartdate and D.effectiveenddate  where A.ExtractDate = convert(varchar(11),dateadd(Day,-2,getdate()),121)) as rownumber Order by HotelID,dateid,ROOMTYPEID ASC OFFSET $&& ROWS FETCH NEXT $** ROWS ONLY
#tsa.select.3=Select HOTELID,DATEID,ROOMCLASSID,ROOMCLASSDESC,ROOMTYPEID,ROOMTYPEDEC,ROOMNAME,ROOMGROUP,ROOMCATEGORYLEVEL,PHYSICALROOMS,OCCUPIEDROOMS,AVAILABLEROOMS,OOOROOMS,OOSROOMS,ARRIVALROOMS,COMPUSEROOMS,HOUSEUSEROOMS,DAYUSEROOMS,DEFINITEARRIVALS,WALKINROOMS,NOSHOWROOMS,EARLYDEPARTUREROOMS,EXTSTAYROOMS,NUMBEROFGUESTSINHOUSE,TOTALROOMREVENUE,TOTALFBREVENUE,TOTALOTHERREVENUE,TOTALPACKAGEREVENUE,TOTALPACKAGEROOMREVENUE,TOTALPACKAGEFBREVENUE,TOTALPACKAGEOTHERREVENUE,TOTALPACKAGENONREVENUE from(SELECT DISTINCT A.Hotelid, Cast(Cast(Year(A.EXTRACTDATE) AS NVARCHAR) + ''  + Cast(Format(A.EXTRACTDATE, 'MM')AS NVARCHAR)  + ''  + Cast(Format(A.EXTRACTDATE, 'dd') AS NVARCHAR) AS INT) AS  DateID, ISNULL(A.roomtype,'NA') as ROOMCLASSID,ISNULL(D.RoomName,'NA') as [ROOMCLASSDESC],ISNULL(A.RoomType,'NA') as ROOMTYPEID,ISNULL(D.RoomName,'NA') as [ROOMTYPEDEC],ISNULL(D.[ROOMNAME],'NA') as [ROOMNAME],ISNULL(D.ROOMGRP,'NA') as ROOMGROUP, ISNULL(D.RoomCategory,'NA') as [ROOMCATEGORYLEVEL], (A.availablerooms) as PhysicalRooms, A.roomssold AS OccupiedRooms, (A.AvailableRooms - A.RoomsSold) as availablerooms,  ISNULL(B.OORoom,0) as OOORooms,0 as OOSRooms,ISNULL(B.TotalArrival,0) as ArrivalRooms, 0 as CompUseRooms,0 as HouseUseRooms,0 as Dayuserooms, 0 as DefiniteArrivals, 0 as WalkinRooms,0 as noshowrooms,0 as EarlyDepartureRooms,0 as ExtstayRooms,0 as Numberofguestsinhouse,CONVERT(NUMERIC(18, 2), A.roomrev)   AS TotalRoomRevenue, 0 as TotalFBRevenue,CONVERT(NUMERIC(18, 2), A.otherrev)  AS TotalOtherRevenue,0 as TotalPackageRevenue, 0 as TotalPackageRoomRevenue,0 as TotalPackageFBRevenue,0 as TotalPackageOtherRevenue,0 as TotalPackageNonRevenue,0 as RunID FROM   t_fin_fideliotsa03 A Left Join t_fin_fideliotsa07 B on B.hotelcode = A.hotelcode AND B.extractdate = A.extractdate  AND B.roomtype = A.roomtype AND B.ExtractDate=B.GFORBDate Left Join [T_TRN_BI_HOTELROOMCODE] D on A.Hotelid=D.hotelid and A.ROomType=D.Roomcode and A.Extractdate between D.effectivestartdate and D.effectiveenddate  where A.extractdate = convert(varchar(11),dateadd(Day,-2,'20190610'),121) group by A.Hotelid, A.EXTRACTDATE,A.roomtype,A.id,A.availablerooms,A.roomrev,a.otherrev,A.RoomsSold,B.ooroom,B.TotalArrival,D.RoomName,D.ROOMGRP,D.ROOMCATEGORY  Union ALL SELECT DISTINCT A.Hotelid, Cast(Cast(Year(A.EXTRACTDATE) AS NVARCHAR) + ''  + Cast(Format(A.EXTRACTDATE, 'MM')AS NVARCHAR)  + ''  + Cast(Format(A.EXTRACTDATE, 'dd') AS NVARCHAR) AS INT) AS  DateID,  A.RoomClass as ROOMCLASSID,A.RoomClassdesc as [ROOMCLASSDESC], A.RoomType as ROOMTYPEID,ISNULL(A.ROOMTYPEDESC,'NA') as [ROOMTYPEDEC],ISNULL(D.[ROOMNAME],A.ROOMTYPEDESC) as [ROOMNAME],ISNULL(D.ROOMGRP,'NA') as ROOMGROUP, ISNULL(D.RoomCategory,'NA') as [ROOMCATEGORYLEVEL], A.ExistingRoom as PhysicalRooms, A.NoOfDefiniteRoom AS OccupiedRooms, ( A.ExistingRoom - A.NoOfDefiniteRoom ) AS Availablerooms, A.ooroom as OOORooms,A.OSRoom as OOSRooms,0 as Totalarrival,  0 as CompUseRooms,0 as HouseUseRooms,A.DayUseRoom as Dayuserooms, 0 as DefiniteArrivals, 0 as WalkinRooms,A.noshowroom as noshowrooms,0 as EarlyDepartureRooms,0 as ExtstayRooms,A.noofguests as Numberofguestsinhouse,CONVERT(NUMERIC(18, 2), A.TotalRoomRevenue)  AS TotalRoomRevenue,  CONVERT(NUMERIC(18, 2), A.TotalFBRevenue)  as TotalFBRevenue,CONVERT(NUMERIC(18, 2), A.TotalOtherRevenue) AS TotalOtherRevenue,CONVERT(NUMERIC(18, 2), A.TotalPackageRevenue) as TotalPackageRevenue, CONVERT(NUMERIC(18, 2), A.TotalPackageRoomRevenue) as TotalPackageRoomRevenue,CONVERT(NUMERIC(18, 2), A.TotalPackageFBRevenue) as TotalPackageFBRevenue,CONVERT(NUMERIC(18, 2), A.TotalPackageOtherRevenue) as TotalPackageOtherRevenue,CONVERT(NUMERIC(18, 2), A.TotalPackageNonRevenue) as TotalPackageNonRevenue ,0 as RunID FROM   t_fin_opera5tsa03 A left Join T_TRN_BI_HOTELROOMCODE D on A.Hotelid=D.hotelid and A.ROOMTYPE=D.ROOMCODE and A.Extractdate between D.effectivestartdate and D.effectiveenddate  where A.extractdate = convert(varchar(11),dateadd(Day,-2,'20190610'),121) group by A.Hotelid,A.EXTRACTDATE,A.RoomClass,A.RoomType,A.ExistingRoom,A.NoOfDefiniteRoom,A.NoOfDefiniteRoom,A.ooroom,A.OSRoom,A.DayUseRoom,A.noshowroom,A.noofguests,A.TotalRoomRevenue,A.TotalFBRevenue,A.TotalOtherRevenue,A.TotalPackageRevenue,A.TotalPackageRoomRevenue,A.TotalPackageFBRevenue,A.TotalPackageFBRevenue, A.TotalPackageOtherRevenue,A.TotalPackageNonRevenue, A.id,A.RoomClassDesc,A.RoomTypeDesc,D.RoomName,D.Roomgrp,D.Roomcategory Union ALL SELECT B.Hotelid, Cast(Cast(Year(A.EXTRACTDATE) AS NVARCHAR) + ''  + Cast(Format(A.EXTRACTDATE, 'MM')AS NVARCHAR)  + ''  + Cast(Format(A.EXTRACTDATE, 'dd') AS NVARCHAR) AS INT) AS  DateID,  A.RoomClass as ROOMCLASSID,ISNULL(A.RoomClass,'NA') as [ROOMCLASSDESC], A.RoomType as ROOMTYPEID,ISNULL(D.RoomName,'NA') as [ROOMTYPEDEC],ISNULL(D.[ROOMNAME],'NA'),ISNULL(D.ROOMGRP,'NA') as ROOMGROUP, ISNULL(D.RoomCategory,'NA') as [ROOMCATEGORYLEVEL], A.AvailableRoom as PhysicalRooms, A.occupiedroom AS OccupiedRooms, ( A.availableroom - A.occupiedroom )AS availablerooms, A.ooroom as OOORooms,A.OSRoom as OOSRooms,0 as Totalarrival,  0 as CompUseRooms,0 as HouseUseRooms,A.DayUseRoom as Dayuserooms, 0 as DefiniteArrivals, 0 as WalkinRooms,A.noshowroom as noshowrooms,0 as EarlyDepartureRooms,0 as ExtstayRooms,A.noofguest as Numberofguestsinhouse,CONVERT(NUMERIC(18, 2), ISNULL((A.totalroomrev),0))  AS TotalRoomRevenue,  CONVERT(NUMERIC(18, 2), ISNULL((A.TotalFBRev),0))  as TotalFBRevenue,CONVERT(NUMERIC(18, 2), ISNULL((A.totalotherrev),0)) AS TotalOtherRevenue,CONVERT(NUMERIC(18, 2), ISNULL((A.TotalPackageRev),0)) as TotalPackageRevenue, CONVERT(NUMERIC(18, 2), ISNULL((A.TotalPackageRoomRev),0)) as TotalPackageRoomRevenue,CONVERT(NUMERIC(18, 2), ISNULL((A.TotalPackageFBRev),0)) as TotalPackageFBRevenue,CONVERT(NUMERIC(18, 2), ISNULL((A.TotalPackageOtherRev),0)) as TotalPackageOtherRevenue,CONVERT(NUMERIC(18, 2), ISNULL((A.TotalPackageNonRev),0)) as TotalPackageNonRevenue ,0 as RunID FROM  t_fin_operatsa03 A  Inner Join T_MAS_HOTEL B on A.hotelid=B.hotelid left Join T_TRN_BI_HOTELROOMCODE D on A.Hotelid=D.hotelid and A.ROOMTYPE=D.ROOMCODE and A.Extractdate between D.effectivestartdate and D.effectiveenddate where A.extractdate = convert(varchar(11),dateadd(Day,-2,'20190610'),121) group by B.Hotelid,A.EXTRACTDATE,A.RoomClass,A.RoomType,A.AvailableRoom,A.occupiedroom,A.ooroom,A.OSRoom,A.DayUseRoom,A.noshowroom,A.noofguest,A.totalroomrev,A.TotalFBRev,A.totalotherrev,A.TotalPackageRev,A.TotalPackageRoomRev,A.TotalPackageRoomRev,A.TotalPackageFBRev, A.TotalPackageOtherRev,A.TotalPackageNonRev, A.id,Roomname,RoomGrp,Roomcategory Union ALL SELECT A.Hotelid, Cast(Cast(Year(EXTRACTDATE) AS NVARCHAR) + ''  + Cast(Format(EXTRACTDATE, 'MM')AS NVARCHAR)  + ''  + Cast(Format(EXTRACTDATE, 'dd') AS NVARCHAR) AS INT) AS  DateID,  A.ROOMCLASSID as ROOMCLASSID, ISNULL(A.ROOMCLASSID,'NA') AS ROOMCLASSDESC,ROOMTYPEID as ROOMTYPEID,ISNULL(D.RoomName,'NA') as [ROOMTYPEDEC],ISNULL(D.[ROOMNAME],'NA'),ISNULL(D.ROOMGRP,'NA') as ROOMGROUP, ISNULL(D.RoomCategory,'NA') as [ROOMCATEGORYLEVEL], PhysicalRooms as PhysicalRooms, OccupiedRooms AS OccupiedRooms, (PhysicalRooms - OccupiedRooms) AS Availablerooms, OOORooms as OOORooms,OOSRooms as OOSRooms,ArrivalRooms as Totalarrival,  CompUseRooms as CompUseRooms,HouseUseRooms as HouseUseRooms,DayUseRooms as Dayuserooms, DefiniteArrivals as DefiniteArrivals, WalkinRooms as WalkinRooms,noshowrooms as noshowrooms,EarlyDepartureRooms as EarlyDepartureRooms,ExtstayRooms as ExtstayRooms,Numberofguestsinhouse as Numberofguestsinhouse,CONVERT(NUMERIC(18, 2), TotalRoomRev)  AS TotalRoomRevenue,  CONVERT(NUMERIC(18, 2), TotalFBRev)  as TotalFBRevenue,CONVERT(NUMERIC(18, 2), TotalOtherRev) AS TotalOtherRevenue,0 as TotalPackageRevenue, 0 as TotalPackageRoomRevenue,0 as TotalPackageFBRevenue,0 as TotalPackageOtherRevenue,0 as TotalPackageNonRevenue ,0 as RunID FROM   t_fin_fspms_room A left Join T_TRN_BI_HOTELROOMCODE D on A.Hotelid=D.hotelid and A.ROOMTYPEID=D.ROOMCODE  and A.Extractdate between D.effectivestartdate and D.effectiveenddate  where A.ExtractDate = convert(varchar(11),dateadd(Day,-2,'20190610'),121)) as rownumber Order by HotelID,dateid,ROOMTYPEID ASC OFFSET $&& ROWS FETCH NEXT $** ROWS ONLY
tsa.select.table.3=T_MAS_HOTEL
tsa.insert.3=INSERT INTO T_FACT_HOTEL_ROOM_STATISTICS(HOTELID,DATEID,ROOMCLASSID,ROOMCLASSDESC,ROOMTYPEID,ROOMTYPEDEC,ROOMNAME,ROOMGROUP,ROOMCATEGORYLEVEL,PHYSICALROOMS,OCCUPIEDROOMS,AVAILABLEROOMS,OOOROOMS,OOSROOMS,ARRIVALROOMS,COMPUSEROOMS,HOUSEUSEROOMS,DAYUSEROOMS,DEFINITEARRIVALS,WALKINROOMS,NOSHOWROOMS,EARLYDEPARTUREROOMS,EXTSTAYROOMS,NUMBEROFGUESTSINHOUSE,TOTALROOMREVENUE,TOTALFBREVENUE,TOTALOTHERREVENUE,TOTALPACKAGEREVENUE,TOTALPACKAGEROOMREVENUE,TOTALPACKAGEFBREVENUE,TOTALPACKAGEOTHERREVENUE,TOTALPACKAGENONREVENUE,RUNID)  \
			 VALUES (#[payload.HOTELID],#[payload.DATEID],#[payload.ROOMCLASSID],#[payload.ROOMCLASSDESC],#[payload.ROOMTYPEID],#[payload.ROOMTYPEDEC],#[payload.ROOMNAME],#[payload.ROOMGROUP],#[payload.ROOMCATEGORYLEVEL],#[payload.PHYSICALROOMS],#[payload.OCCUPIEDROOMS],#[payload.AVAILABLEROOMS],#[payload.OOOROOMS],#[payload.OOSROOMS],#[payload.ARRIVALROOMS],#[payload.COMPUSEROOMS],#[payload.HOUSEUSEROOMS],#[payload.DAYUSEROOMS],#[payload.DEFINITEARRIVALS],#[payload.WALKINROOMS],#[payload.NOSHOWROOMS],#[payload.EARLYDEPARTUREROOMS],#[payload.EXTSTAYROOMS],#[payload.NUMBEROFGUESTSINHOUSE],#[payload.TOTALROOMREVENUE],#[payload.TOTALFBREVENUE],#[payload.TOTALOTHERREVENUE],#[payload.TOTALPACKAGEREVENUE],#[payload.TOTALPACKAGEROOMREVENUE],#[payload.TOTALPACKAGEFBREVENUE],#[payload.TOTALPACKAGEOTHERREVENUE],#[payload.TOTALPACKAGENONREVENUE],#[flowVars.tableRunID])
tsa.insert.table.3=T_FACT_HOTEL_ROOM_STATISTICS
tsa.insert.dbtype.3=bi-report
tsa.insert.operationtype.3=truncate
tsa.db.flag.3=MS


tsa.select.22=SELECT a.* FROM T_fact_Hotel_Arrivals a inner join (select CHECKINDATE,HOTELID,ROOM,DATEID,min(TRANSACTIONDATETIME)as minTime from T_FACT_HOTEL_ARRIVALS group by CHECKINDATE,HOTELID,ROOM,DATEID having ROOM IS NOT NULL AND ROOM !='' and count(ROOM) > 1 and CHECKINDATE=#[flowVars.CHECKINDATE] and DATEID=#[flowVars.DATEID]) b ON a.CHECKINDATE = b.CHECKINDATE AND a.HOTELID = b.HOTELID AND a.ROOM = b.ROOM  AND a.DATEID = b.DATEID AND a.TRANSACTIONDATETIME<>b.minTime order by a.ROOM,a.TRANSACTIONDATETIME

tsa.update.22=update T_FACT_HOTEL_ARRIVALS set RESVSTATUS='SHARED' where TRANSACTIONDATETIME=#[payload.TRANSACTIONDATETIME]  and ROOM=#[payload.ROOM]  and CHECKINDATE=#[payload.CHECKINDATE] and HOTELID=#[payload.HOTELID] and DATEID=#[payload.DATEID] and RUNID=#[flowVars.flowRunID]

